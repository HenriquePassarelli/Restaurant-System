// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userName  String   @unique
  password  String   @db.String()
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  rolesId String[] @db.ObjectId

  roles  Role[]  @relation(fields: [rolesId], references: [id])
  tables Table[] @relation()

  @@index([rolesId])
  @@map("user")
}

model Role {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?  @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  usersId String[] @map("users") @db.ObjectId

  users User[] @relation(fields: [usersId], references: [id])

  @@index([usersId])
  @@map("role")
}

model Table {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  alias         String   @unique
  description   String?  @default("")
  capacity      Int?
  status        Boolean? @default(true)
  paymentMethod String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())

  userId   String   @map("user") @db.ObjectId
  user     User     @relation(fields: [userId], references: [id])
  ordersId String[] @map("orders")

  @@map("table")
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  thumbnail   String?
  description String?  @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("product")
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  items     String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tableId   String      @db.ObjectId
  OrderItem OrderItem[]
}

model OrderItem {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  quantity  Int
  orderId   String @db.ObjectId
  Order     Order  @relation(fields: [orderId], references: [id])
}
